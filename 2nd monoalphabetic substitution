import string
def encrypt(plaintext, key_mapping):
    plaintext = plaintext.lower()
    ciphertext = ""
    alphabet = string.ascii_lowercase
    for char in plaintext:
        if char in alphabet:
            index = alphabet.index(char)
            ciphertext += key_mapping[index]
        else:
            ciphertext += char  # Keep spaces and punctuation as-is
    return ciphertext
def decrypt(ciphertext, key_mapping):
    alphabet = string.ascii_lowercase
    reverse_mapping = {key_mapping[i]: alphabet[i] for i in range(26)}
    plaintext = ""
    for char in ciphertext:
        if char in reverse_mapping:
            plaintext += reverse_mapping[char]
        else:
            plaintext += char
    return plaintext
key = 'phqgiumeaylnofdxjkrcvstzwb'
if len(set(key)) != 26 or len(key) != 26:
    print("Error: Invalid key. It must be a 26-character unique lowercase alphabet mapping.")
else:
    text = input("Enter plaintext: ")
    encrypted = encrypt(text, key)
    print("Encrypted text:", encrypted)
    decrypted = decrypt(encrypted, key)
    print("Decrypted text:", decrypted)
